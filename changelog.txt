2017.2.2 - 2018/07/25

New Features:
+ possibility to specific path to TechTalk.SpecFlow.VisualStudio.CodeBehindGenerator.exe

Bugfix:
+ fix encoding problems with special chars https://github.com/techtalk/SpecFlow/issues/1205

2017.2.1 - 2018/07/10

Changed behaviour:
+ Set out of process as default generation mode

2017.1.13 - 2018/03/30

New Features:
+ Add option to use an out of process tool to generate the code behind files

2017.1.12 - 2018/02/16

Public release to Visual Studio Marketplace


2017.1.11 

Fixed issues:
+ Visual Studio 2017 Generation error: Could not load file or assembly 'Microsoft.Build.Framework, Version=15.1.0.0 - https://github.com/techtalk/SpecFlow/issues/857


2015.1.2 - 2015/05/26

Hotfix for release v2015.1

Fixed issues:
+ "Run SpecFlow Scenarios" does not work with ReSharper 9 (Issue 435)


2015.1.1 - 2015/05/06

Hotfix for release v2015.1

Fixed issues:
+ VS2013 Plugin 2015.1 doesn't find step bindings if there is a base class in other project (Issue 438)


2015.1.0 - 2015/04/30

Supports Visual Studio 2013 and 2015.
Compatible with SpecFlow v1.7 or later.

Fixed issues:
+ 'Go To Definition' does not work if StepArgumentTransformation is used for Table (Issue 340)
+ More stable discovery of step definitions
+ Fix issue for machines having .NET 4.6 installed


1.9.3 - 2013/09/26 (Visual Studio 2013 Integration)

Note: 1.9.3 only improved the Visual Studio integration, but uses the SpecFlow 1.9.0 runtime and generator.

New Features:
+ Visual Studio 2013 support (see http://www.specflow.org/documentation/Visual-Studio-2013-Integration/)
+ SpecRun 1.2 support: run/debug tests from the feature file editor


1.9.2 - 2013/03/25 (Visual Studio Integration update)

Note: 1.9.2 only improved the Visual Studio integration, but uses the SpecFlow 1.9.0 runtime and generator.

Fixed issues:
+ VS2010/VS2012: Visual Studio freezes while editing keywords (Issue 128)
+ VS2010/VS2012: Linked app.config now works (Issue 255, by ArildF)
+ VS2012: Run SpecFlow Scenarios didn't work in VS2012 Update 1 (Issue 273)
+ VS2012: Support execution of scenarios from editor, that are generated with <generator allowDebugGeneratedFiles="true" /> setting. (related to Issue 275)
  The generator setting above can be used as a workaround for VS2012 test runner issues, for example that Scenario Outline and Example tables show up as "External"
+ VS2010/VS2012: Parameter is not colorized correctly when part of the keyword (Issue 276)
+ VS2010/VS2012: 'Go To Definition' does not work with partial classes (Issue 53)
+ VS2010/VS2012: ReSharper shortcuts (comment, go to definition, run test) do not work
+ VS2010/VS2012: Test class generation fails when installed SpecFlow and SpecFlow.CustomPlugin packages in one project (Issue 279)

New Features:
+ VS2010/VS2012: Table outlining support in the editor (Issue 244, by RaringCoder)


1.9.1 - 2012/10/12 (Visual Studio Integration update)

Note: 1.9.1 only improved the Visual Studio integration, but uses the SpecFlow 1.9.0 runtime and generator.

Fixed issues:
+ VS2012: Run specflow scenarios does not work: works as for RC, but still runs all scenarios from the file (Issue 210)
+ VS2010: VS stops showing context menus if code window contains C++ code (Issue 209)
+ VS2010: Use < and > around variables in Intellisense for steps (Issue 203)
+ VS2010: SpecFlow incorrectly detected changes in the configuration (Issue 215)
+ VS2008: Support for VB code generation
+ VS2010: Exception during project load
+ VS2010: InvalidComObjectException: COM object that has been separated from its underlying RCW cannot be used. (Issue 230)
+ VS2010/VS2012: improve stability, more tracing


1.9.0 - 2012/08/06

For detailed change log of versions 1.9.0 or earlier please check SpecFlow change log.
